version: '3'

volumes:
  keycloak_data2:

services:

  usuarios-service:
    image: usuarios
    build:
      context: ./usuarios
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - eureka-service
    environment:
      eureka.client.register-with-eureka: false
      eureka.client.fetch-registry: false
      eureka.client.service-url.defaultZone: http://eureka-server:8761/eureka
      spring.data.mongodb.uri: mongodb://localhost:27017/usuario
    ports:
      - "8081:8081"




  eureka-service:
    image: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8761:8761"

  keycloak:
    image: quay.io/keycloak/keycloak:21.0.2
    command: start-dev
    volumes:
      - keycloak_data2:/opt/keycloak/data/
    ports:
      - "9090:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin


  login-service:
    image: login
    build:
      context: ./login
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - keycloak
      - eureka-service
    environment:
      eureka.client.register-with-eureka: false
      eureka.client.fetch-registry: false
      keycloak.admin-url: http://localhost:9090/realms/tutorial-api
      spring.security.oauth2.resource-server.jwt.issuer-uri: http://localhost:9090/realms/tutorial-api
      eureka.client.service-url.defaultZone: http://eureka-server:8761/eureka
    ports:
      - "8089:8089"

  gateway-service:
    image: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - eureka-service
      - usuarios-service
      - keycloak
      - login-service
    environment:
      spring.cloud.gateway.discovery.locator.enabled: true
      spring.cloud.gateway.routes[0].id: usuario-service
      spring.cloud.gateway.routes[0].uri: lb://USUARIO-SERVICE
      spring.cloud.gateway.routes[0].predicates[0]: Path=/api/usuario/**

      spring.cloud.gateway.routes[1].id: auth-service
      spring.cloud.gateway.routes[1].uri: lb://AUTH-SERVICE
      spring.cloud.gateway.routes[1].predicates[0]: Path=/api/auth/**

      eureka.client.register-with-eureka: false
      eureka.client.fetch-registry: false
      eureka.client.service-url.defaultZone: http://eureka-server:8761/eureka
      spring.security.oauth2.resourceserver.jwt.issuer-uri: http://localhost:9090/realms/tutorial-api
      spring.security.oauth2.resourceserver.jwt.jwk-set-uri: http://localhost:9090/realms/tutorial-api/protocol/openid-connect/certs
    ports:
      - "8080:8080"